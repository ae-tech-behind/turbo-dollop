// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eiizu/go-service/controller (interfaces: LoansUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "github.com/eiizu/go-service/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLoansUseCase is a mock of LoansUseCase interface
type MockLoansUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockLoansUseCaseMockRecorder
}

// MockLoansUseCaseMockRecorder is the mock recorder for MockLoansUseCase
type MockLoansUseCaseMockRecorder struct {
	mock *MockLoansUseCase
}

// NewMockLoansUseCase creates a new mock instance
func NewMockLoansUseCase(ctrl *gomock.Controller) *MockLoansUseCase {
	mock := &MockLoansUseCase{ctrl: ctrl}
	mock.recorder = &MockLoansUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoansUseCase) EXPECT() *MockLoansUseCaseMockRecorder {
	return m.recorder
}

// CreateLoan mocks base method
func (m *MockLoansUseCase) CreateLoan(arg0 entity.Loan) (*entity.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoan", arg0)
	ret0, _ := ret[0].(*entity.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLoan indicates an expected call of CreateLoan
func (mr *MockLoansUseCaseMockRecorder) CreateLoan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoan", reflect.TypeOf((*MockLoansUseCase)(nil).CreateLoan), arg0)
}

// GetLoans mocks base method
func (m *MockLoansUseCase) GetLoans(arg0 map[string]string) (map[string]entity.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoans", arg0)
	ret0, _ := ret[0].(map[string]entity.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoans indicates an expected call of GetLoans
func (mr *MockLoansUseCaseMockRecorder) GetLoans(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoans", reflect.TypeOf((*MockLoansUseCase)(nil).GetLoans), arg0)
}

// UpdateLoan mocks base method
func (m *MockLoansUseCase) UpdateLoan(arg0 entity.Loan) (*entity.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoan", arg0)
	ret0, _ := ret[0].(*entity.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateLoan indicates an expected call of UpdateLoan
func (mr *MockLoansUseCaseMockRecorder) UpdateLoan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoan", reflect.TypeOf((*MockLoansUseCase)(nil).UpdateLoan), arg0)
}
